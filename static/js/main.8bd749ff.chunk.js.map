{"version":3,"sources":["components/ChartComponent.js","components/CountryFinder.js","components/TableComponent.js","App.js","Redux/action.js","Redux/reducer.js","Redux/store.js","index.js"],"names":["connect","state","global","country","dispatch","props","useState","totalConfirmed","setTotalConfirmed","totalDeaths","setTotalDeaths","totalRecovered","setTotalRecovered","countryConfirmed","map","el","TotalConfirmed","join","countryDeaths","TotalDeaths","countryRecovered","TotalRecovered","useEffect","Global","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","width","height","options","maintainAspectRatio","getOneCountry","name","type","payload","countrySearch","setCountrySearch","selectedCountry","setSelectedCountry","allCountries","Countries","Country","sort","TextField","id","select","value","onChange","event","target","helperText","option","index","MenuItem","setData","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","row","scope","NewConfirmed","NewRecovered","NewDeaths","ID","getGlobal","axios","get","headers","then","res","catch","err","console","log","initialState","covid","action","oneCountry","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bd749ff.chunk.js","sourcesContent":["import {Doughnut} from 'react-chartjs-2';\nimport {useEffect, useState} from \"react\";\nimport {connect} from \"react-redux\";\n\n\nfunction ChartComponent(props) {\n\n  // const countryConfirmed = +(props.country.map(el => el.TotalConfirmed).join())\n\n\n  const [totalConfirmed, setTotalConfirmed] = useState()\n  const [totalDeaths, setTotalDeaths] = useState()\n  const [totalRecovered, setTotalRecovered] = useState()\n\n\n  const countryConfirmed = +(props.country.map(el => el.TotalConfirmed).join())\n  const countryDeaths = +(props.country.map(el => el.TotalDeaths).join())\n  const countryRecovered = +(props.country.map(el => el.TotalRecovered).join())\n\n\n  useEffect(() => {\n    if (!props.global) {\n      return null;\n    } else {\n      setTotalConfirmed(props.global.Global.TotalConfirmed)\n      setTotalDeaths(props.global.Global.TotalDeaths)\n      setTotalRecovered(props.global.Global.TotalRecovered)\n\n    }\n  }, [props.global])\n\n\n\n  useEffect(() => {\n    setTotalConfirmed(countryConfirmed)\n    setTotalDeaths(countryDeaths)\n    setTotalRecovered(countryRecovered)\n  }, [props.country])\n\n\n  return (\n    <div>\n\n      <Doughnut\n        data={{\n          labels: [`Infected ${totalConfirmed}`, `Recovered ${totalRecovered}`, `Death ${totalDeaths}`],\n          datasets: [{\n            label: '# of Votes',\n            data: [totalConfirmed, totalRecovered, totalDeaths],\n            backgroundColor: [\n              'rgba(255, 99, 132, 0.2)',\n              'rgba(54, 162, 235, 0.2)',\n              'rgba(255, 206, 86, 0.2)',\n            ],\n            borderColor: [\n              'rgba(255, 99, 132, 1)',\n              'rgba(54, 162, 235, 1)',\n              'rgba(255, 206, 86, 1)',\n            ],\n            borderWidth: 1\n          }]\n        }}\n        width={1000}\n        height={300}\n        options={{maintainAspectRatio: false}}\n      />\n    </div>\n\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  global: state.global,\n  country: state.country\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChartComponent);\n","import {useEffect, useState} from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport {connect} from \"react-redux\";\nimport {MenuItem} from \"@material-ui/core\";\n\n\nfunction CountryFinder(props) {\n\n\n\n  const [countrySearch, setCountrySearch] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n\n  const handleChangeCountrySearch = (event) => {\n    setSelectedCountry(event.target.value);\n    props.getOneCountry(event.target.value)\n  }\n\n\nuseEffect(() => {\n  if (!props.global) {\n    return null;\n  } else {\n    const allCountries = props.global.Countries.map(el => el.Country).sort();\n    setCountrySearch(allCountries)\n  }\n}, [props.global])\n\n\n\n  return (\n    <form>\n      <div>\n        <TextField\n          id=\"standard-select-country\"\n          select\n          label=\"Select\"\n          value={selectedCountry}\n          onChange={handleChangeCountrySearch}\n          helperText=\"Please select your Country\"\n        >\n          {countrySearch.map((option, index) => (\n            <MenuItem\n              key={index}\n              value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n    </form>\n  )\n}\n\n\nconst mapStateToProps = (state) => ({\n  global: state.global,\n\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  getOneCountry: (name) => dispatch({type: 'GET_ONE_COUNTRY', payload: name})\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CountryFinder);\n","import React, {useEffect, useState} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport {connect} from \"react-redux\";\n\n\n\nfunction TableComponent(props) {\n\n  const [data, setData] = useState()\n\n\n  useEffect(() => {\n    if (!props.country) {\n      return null;\n    } else {\n      setData(props.country)\n    }\n  }, [props.country])\n\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table  aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Country</TableCell>\n            <TableCell align=\"right\">Total Confirmed</TableCell>\n            <TableCell align=\"right\">Total Recovered</TableCell>\n            <TableCell align=\"right\">Total Deaths</TableCell>\n            <TableCell align=\"right\">New Confirmed</TableCell>\n            <TableCell align=\"right\">New Recovered</TableCell>\n            <TableCell align=\"right\">New Deaths</TableCell>\n          </TableRow>\n        </TableHead>\n\n\n        {!data ? null\n          :\n        <TableBody>\n        {data.map((row) => (\n          <TableRow key={row.ID}>\n          <TableCell component=\"th\" scope=\"row\">\n        {row.Country}\n          </TableCell>\n          <TableCell align=\"right\">{row.TotalConfirmed}</TableCell>\n          <TableCell align=\"right\">{row.TotalRecovered}</TableCell>\n          <TableCell align=\"right\">{row.TotalDeaths}</TableCell>\n          <TableCell align=\"right\">{row.NewConfirmed}</TableCell>\n          <TableCell align=\"right\">{row.NewRecovered}</TableCell>\n          <TableCell align=\"right\">{row.NewDeaths}</TableCell>\n          </TableRow>\n          ))}\n          </TableBody>\n        }\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  country: state.country,\n  global: state.global\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableComponent);\n","import ChartComponent from \"./components/ChartComponent\";\nimport CountryFinder from \"./components/CountryFinder\";\nimport {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport { getGlobalStats} from \"./Redux/action\";\nimport TableComponent from \"./components/TableComponent\";\n\n\nfunction App(props) {\n\n\n  useEffect(() => {\n    props.getGlobal()\n  }, [])\n\n\n\n\n\n  return (\n    <>\n      <CountryFinder/>\n      <ChartComponent/>\n      <TableComponent/>\n    </>\n  );\n}\n\n\nconst mapStateToProps = (state) => ({\n  global: state.global,\n  country: state.country\n})\n\n\nconst mapDispatchToProps = (dispatch) => ({\n  getGlobal: () => dispatch(getGlobalStats()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import axios from \"axios\";\n\nexport const getGlobalStats = () => {\n  return (dispatch) => {\n    axios.get(`https://api.covid19api.com/summary`, {\n      headers: {\n        'Authorization': '5cf9dfd5-3449-485e-b5ae-70a60e997864'\n      }\n    })\n      .then(res => {\n        dispatch({\n          type: 'GET_GLOBAL_STATS',\n          payload: res.data\n        })\n      })\n      .catch(err => console.log(err, \"Error\"))\n  }\n}\n\n// export const getAllCountries = () => {\n//   return (dispatch) => {\n//     axios.get('https://api.covid19api.com/countries', {\n//       headers: {\n//         'Authorization': '5cf9dfd5-3449-485e-b5ae-70a60e997864'\n//       }\n//     })\n//       .then(res => {\n//         dispatch({\n//           type: 'GET_ALL_COUNTRIES',\n//           payload: res.data\n//         })\n//       })\n//       .catch(err => console.log(err, \"Error\"))\n//   }\n// }\n\n","const initialState = {\n  global: null,\n  country: []\n};\n\n\nconst covid = (state = initialState, action) => {\n  switch (action.type) {\n    case 'GET_GLOBAL_STATS' :\n      return {\n        ...state,\n        global: action.payload\n      }\n\n\n    case 'GET_ONE_COUNTRY' :\n      const oneCountry = state.global.Countries.filter(el => el.Country === action.payload)\n      return {\n        ...state,\n        country: oneCountry\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default covid;\n","\nimport {createStore, applyMiddleware} from \"redux\";\nimport covid from \"./reducer\";\nimport thunk from 'redux-thunk'\nimport {composeWithDevTools} from \"redux-devtools-extension\";\n\nconst store = createStore(\n  covid,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './Redux/store';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}